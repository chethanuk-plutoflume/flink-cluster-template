[tool.poetry]
name = "flink_{{ flink_repo_name | default("adhoc") }}"
version = "0.1.0"
description = "Flink K8s Cluster Template Project"
authors = ["ChethanUK <chethanuk@outlook.com>"]
maintainers = ["ChethanUK <chethanuk@outlook.com>"]
license = "Apache-2.0"

[tool.poetry.dependencies]
python = "^3.7"
astro-sdk-python = {extras = ["postgres"], version = "^1.0.2"}
kubernetes = "23.6.0"
exceptiongroup = "^1.0.0-rc.9"

[tool.poetry.dev-dependencies]
apache-airflow = "^2.3.4"
pytest = "^7.1.3"
click = "^8.1.3"
pytest-split = "^0.8.0"
pytest-dotenv = "^0.5.2"
requests-mock = "^1.10.0"
pytest-cov = "^3.0.0"
pytest-describe = "^2.0.1"
mypy = "^0.971"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

## Black
[tool.black]
# https://github.com/psf/black
line-length = 110
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
target_version = ['py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.pytest_cache
  | \.tox
  | \.venv
  | htmlcov
  | _build
  | buck-out
  | build
  | dist
  # The following are specific to Black, you probably don't want those.
  | blib2to3
  | tests/data
  | profiling
  | tests/airflow-dags/
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort
# https://github.com/timothycrosley/isort/wiki/isort-Settings
profile = "black"
indent = '    '
#force_grid_wrap = 0
atomic = true
#lines_after_imports = 2
#lines_between_types = 1
skip_glob = ['__init__.py', 'tests/airflow-dags/']
#src_paths=isort,test

[mypy]
python_version = 3.8
#warn_return_any = True
#warn_unused_configs = True

[pytest]
norecursedirs = ".git .* *.egg* old docs dist build *.venv docs/_build *.egg .tox"
# python_files = tests/functional* tests/integration*
cache_dir = "./.pytest_cache"
python_files = "*test_*.py"
timeout = 300
env_files = ".env"
minversion = "7.0"
pythonpath = [
    "dags",
    "dags/seedflow",
    "plugins"
]
testpaths = [
    "tests"
]
#addopts = "-p no:warnings" # "-ra -q"
filterwarnings = [
    "ignore::UserWarning"
]
